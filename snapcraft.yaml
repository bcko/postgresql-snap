name: postgresql
version: 13.0
summary: PostgreSQL is a powerful, open source object-relational database system.
description: 
  PostgreSQL is a powerful, open source object-relational database system.
  It has more than 15 years of active development and a proven architecture
  that has earned it a strong reputation for reliability, data integrity,
  and correctness.
confinement: strict
grade: stable

apps:
  initialize:
       command: usr/bin/wrapper-initialize
  clusterdb:
       command: usr/bin/clusterdb
       plugs: [network]
  createdb:
       command: usr/bin/createdb
       plugs: [network]
  createuser:
       command: usr/bin/createuser
       plugs: [network]
  dropdb:
       command: usr/bin/dropdb
       plugs: [network]
  dropuser:
       command: usr/bin/dropuser
       plugs: [network]
  ecpg:
       command: usr/bin/ecpg
  initdb:
       command: usr/bin/initdb
  oid2name:
       command: usr/bin/oid2name
       plugs: [network]
  pgarchivecleanup:
       command: usr/bin/pg_archivecleanup
  pgbasebackup:
       command: usr/bin/pg_basebackup
       plugs: [network]
  pgbench:
       command: usr/bin/pgbench
       plugs: [network]
  pgconfig:
       command: usr/bin/pg_config
  pgcontroldata:
       command: usr/bin/pg_controldata
  pgctl:
       command: usr/bin/wrapper-pg_ctl
       plugs:
          - network
          - network-bind
  pgdump:
       command: usr/bin/pg_dump
       plugs: [network]
  pgdumpall:
       command: usr/bin/pg_dumpall
       plugs: [network]
  pgisready:
       command: usr/bin/pg_isready
       plugs: [network]
  pgreceivewal:
       command: usr/bin/pg_receivewal
       plugs: [network]
  pgrecvlogical:
       command: usr/bin/pg_recvlogical
       plugs: [network]
  pgresetwal:
       command: usr/bin/pg_resetwal
  pgrestore:
       command: usr/bin/pg_restore
       plugs: [network]
  pgrewind:
       command: usr/bin/pg_rewind
       plugs: [network]
  pgtestfsync:
       command: usr/bin/pg_test_fsync
  pgtesttiming:
       command: usr/bin/pg_test_timing
  pgupgrade:
       command: usr/bin/pg_upgrade
  pgwaldump:
       command: usr/bin/pg_waldump
  postgres:
       command: usr/bin/postgres
       plugs:
         - network
         - network-bind
  postmaster:
       command: usr/bin/postmaster
       plugs: [network]
  psql:
       command: usr/bin/wrapper-psql
       plugs: [network]
  reindexdb:
       command: usr/bin/reindexdb
       plugs: [network]
  vacuumdb:
       command: usr/bin/vacuumdb
       plugs: [network]
  vacuumlo:
       command: usr/bin/vacuumlo
       plugs: [network]
  pgverifychecksums:
       command: usr/bin/pg_verify_checksums
  pgstandby:
       command: usr/bin/pg_standby
  
parts:
  postgresql:
    plugin: autotools
    source: https://ftp.postgresql.org/pub/source/v13.0/postgresql-13.0.tar.bz2
    build-packages:
        - bison
        - flex
        - libreadline-dev
        - zlib1g-dev
        - python-dev
        - tcl8.6-dev
        - libssl-dev
        - libpam0g-dev
        - libxml2-dev
        - libldap2-dev
        - libxslt1-dev
        - uuid-dev
        - libxml2-utils
        - openjade
        - opensp
        - xsltproc
        - gettext
        - libperl-dev
        - dpkg-dev
        - pkg-config
        - libicu-dev
        - libipc-run-perl
        - libio-pty-perl
    stage-packages:
        - libc-bin
        - locales
    build: |
      
        HOST_MULTIARCH=$(gcc -print-multiarch)
        ARCH=$(dpkg-architecture -qDEB_HOST_ARCH_BITS)
       
        if [ $ARCH -eq 64 ]; then
             EXTRA_CFLAGS="-fno-omit-frame-pointer"
       
        elif [ $ARCH -eq 32 ]; then
             EXTRA_CFLAGS="-fPIC -pie"
        fi

        ./configure \
          LDFLAGS="-Wl,--as-needed -L/usr/lib/mit-krb5 -L/usr/lib/$HOST_MULTIARCH/mit-krb5" \
          CFLAGS="-I/usr/include/mit-krb5 $EXTRA_CFLAGS" \
          --prefix=/usr \
          --localstatedir=/etc \
          --sysconfdir=/var \
          --enable-nls \
          --enable-integer-datetimes \
          --enable-thread-safety \
          --enable-tap-tests \
          --enable-debug \
          --disable-rpath \
          --with-icu \
          --with-uuid=e2fs \
          --with-gnu-ld \
          --with-pgport=5432 \
          --with-system-tzdata=/usr/share/zoneinfo \
          --with-ldap \
          --with-tcl \
          --with-tclconfig=/usr/lib/tcl8.6/ \
          --with-perl \
          --with-python \
          --with-pam \
          --with-openssl \
          --with-libxml \
          --with-libxslt && make world
    install: |
        make install-world DESTDIR=$SNAPCRAFT_PART_INSTALL
  wrapper:
    plugin: make
    source: .
